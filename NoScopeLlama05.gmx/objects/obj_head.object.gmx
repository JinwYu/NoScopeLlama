<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_head</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// Variables
var lclick = mouse_check_button(mb_left);
firing = false;
rateOfFire = 10; // Being able to fire every 10 frames.
spitSpeed = 180; //180

// Create audio emitter.
audio_em = audio_emitter_create();

// Spit counter for highscores.
spitCounter = 0;


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>firing=false;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Find direction towards mouse, based on player
dir = point_direction(obj_llama01.x, obj_llama01.y, mouse_x, mouse_y); //
image_angle = dir;

//Possibly flip head sprite and make it follow the player's position.
if (obj_llama01.x &lt; mouse_x){ //on the left side of the mouse so head must be facing right.
    image_yscale =+ 3;
    x = obj_llama01.x+25;
    y = obj_llama01.y-25;
}
else{
    image_yscale =- 3;
    x = obj_llama01.x-25;
    y = obj_llama01.y-25;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_platform">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Collision
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_floor">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Collision floor

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="53">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Make the spit leave the head.
/*var spit = instance_create(x,y, obj_spit);
spit.direction = image_angle;
spit.image_angle = image_angle; // The spit's angle is the same as the head.
var headAngle = degtorad(spit.image_angle+90); // Plus 90 so spit comes out the front of the head. The higher value, the more the spit goes upwards.
*/

if (obj_llama01.midAir == 1 || (mouse_y &lt; 600)){ // So the player can't fire when selecting ability. &lt; 600 is the y coordinate under the floor.
// Delay time between firing spit so it won't go turbo OP.
if (!firing){
    var spit = instance_create(x,y, obj_spit);
    spit.direction = image_angle;
    spit.image_angle = image_angle; // The spit's angle is the same as the head.
    var headAngle = degtorad(spit.image_angle+90); // Plus 90 so spit comes out the front of the head. The higher value, the more the spit goes upwards.
    
    
    // Keep track of how many spits fired (may be bugged cuz sometimes spit comes out down)
    spitCounter = spitCounter + 1;
    
    
    firing = true;
    alarm[0] = rateOfFire; // Set the alarm so fire will be able after as many frames as rateOfFire is set to.
    // Play spit sound.
    // Vary the pitch of the spit sound to give variation.
    audio_emitter_pitch(audio_em, random_range(0.9, 1.2)); // Pitch is in a random range.
    audio_play_sound_on(audio_em, s_spit01, false, 10); // Needs sound_on for using the emitter.
    
    if (!audio_is_playing(s_beforeSpit)){   // Play disgusting sound.
        audio_play_sound(s_beforeSpit, 3, false);    
    }
    
    // Fire the spit away with physics impulse.
    with(spit){    
        physics_apply_impulse(x,y,sin(headAngle)*spitSpeed, cos(headAngle)*spitSpeed);
    }
    
    
}
}














//--------------- MISC CODE (Might be useful later) ----------------

/*spit = instance_create(x, y, obj_spit);

spit.speed = 15;
spit.direction = image_angle;
spit.image_angle = image_angle;
//effect_create_above(ef_explosion, xp, yp, 0, c_gray);
*/

/*
var dir = point_direction(x, y, player.x, player.y);

// Delay time between firing spit so it won't go turbo OP.
if(!firing){
    firing = true;
    alarm[0] = rateOfFire;
    
    spit = instance_create(x, y, obj_spit);    
    spit.phy_speed_x = lengthdir_x(300, dir); //SPEED is the speed you want to move at.
    spit.phy_speed_y = lengthdir_y(300, dir);
}*/

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="3">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Destroy the emitter.
audio_emitter_free(audio_em);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
